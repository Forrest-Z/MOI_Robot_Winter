<?xml version="1.0"?>
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       name="winter">
	<!-- sensors -->
  	<xacro:include filename="$(find winter_description)/urdf/sensors/hokuyo_urg04_laser.urdf.xacro"/>
        <!-- gazebo -->
        <!--xacro:include filename="$(find winter_description)/urdf/winter.gazebo"/-->
        <xacro:property name="body_radius"      value=".25"/>
        <xacro:property name="body_height"      value=".127"/>
        <xacro:property name="body_mass"   	    value="0.7" />

        <xacro:property name="wheel_separation" value="${body_radius*2}"/>
        <xacro:property name="wheel_radius"     value=".075"/>
        <xacro:property name="wheel_length"     value=".06"/>
        <xacro:property name="wheel_color"      value="0 0 .8 1"/>
        <xacro:property name="wheel_mass"   	  value="0.4" />

        <xacro:property name="caster_radius"    value="0.0325" />
        <xacro:property name="caster_mass"      value="0.3" />

        <xacro:property name="laser_height"     value=".08"/>
        <xacro:property name="laser_radius"     value=".05"/>
        <xacro:property name="laser_mass"   	  value="0.2" />

  <!-- Macro for inertia matrix -->
  <xacro:macro name="sphere_inertial_matrix" params="m r">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
              iyy="${2*m*r*r/5}" iyz="0"
              izz="${2*m*r*r/5}" />
      </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" />
      </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial_matrix" params="m w h d">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(h*h+d*d)/12}" ixy = "0" ixz = "0"
              iyy="${m*(w*w+d*d)/12}" iyz = "0"
              izz="${m*(w*w+h*h)/12}" />
      </inertial>
  </xacro:macro>
  <!-- Macro for caster joint --><!-- fb: front, back -->
   <xacro:macro name="caster" params="fb caster_joint_origin_x">
      <link name="caster_${fb}_link">
          <visual>
              <origin xyz="0 0 0" rpy="0 0 0" />
              <geometry>
                  <sphere radius="${caster_radius}" />
              </geometry>
              <material name="Black" />
          </visual>
          <collision>
              <origin xyz="0 0 0" rpy="0 0 0 " />
              <geometry>
                  <sphere radius="${caster_radius}" />
              </geometry>
          </collision>
          <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
      </link>

      <gazebo reference="caster_${fb}_link">
          <material>Gazebo/Black</material>
      </gazebo>

      <joint name="base_to_caster_${fb}_joint" type="fixed">
          <parent link="base_link"/>
          <child link="caster_${fb}_link"/>
          <origin xyz="${caster_joint_origin_x} 0 ${caster_radius}" rpy="0 0 0" />
      </joint>
        </xacro:macro>
      <!-- caster Definitions -->
      <caster fb="front"  caster_joint_origin_x="${body_radius}" />
      <caster fb="back"  caster_joint_origin_x="-${body_radius}" />

      <!-- base_footprint -->
      <link name="base_footprint">
          <inertial>
              <mass value="0.0001" />
              <origin xyz="0 0 0" />
              <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
                  iyy="0.0001" iyz="0.0"
                  izz="0.0001" />
          </inertial>
          <visual>
              <origin xyz="0 0 0" rpy="0 0 0" />
              <geometry>
                  <box size="0.001 0.001 0.001" />
              </geometry>
          </visual>
      </link>

      <joint name="base_footprint_joint" type="fixed">
          <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0" />
          <parent link="base_footprint"/>
          <child link="base_link" />
      </joint>
<!--base_link-->
        <link name="base_link">
	<cylinder_inertial_matrix  m="${body_mass}" r="${body_radius}" h="${body_height}" />
                <visual>
                        <geometry>
                                <cylinder length="${body_height}" radius="${body_radius}"/>
                        </geometry>
                        <origin xyz="0 0 ${body_height/2+wheel_radius}"/>
                </visual>
                <collision>
                        <geometry>
                                <cylinder length="${body_height}" radius="${body_radius}"/>
                        </geometry>
                        <origin xyz="0 0 ${body_height/2+wheel_radius}"/>
                </collision>
        </link>
	<gazebo reference="base_link">
      		<material>Gazebo/White</material>
  	</gazebo>
<!--laser_link-->
<xacro:hokuyo_urg04_laser name="base_laser_front" parent="base" ros_topic="scan_front" update_rate="10" min_angle="-3.14" max_angle="3.14">
    <origin xyz="0 0 ${body_height+wheel_radius+0.04}" rpy="0 0 0"/>
</xacro:hokuyo_urg04_laser>

<!-- left wheel-->
<link name="left_wheel">
	<cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
                <visual>
                        <geometry>
                                <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
                        </geometry>
                        <material name="blue">
                                <color rgba="${wheel_color}"/>
                        </material>
                        <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                </visual>
		<collision>
			<geometry>
                                <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
                        </geometry>
                        <origin rpy="1.57075 0 0" xyz="0 0 0"/>
		</collision>
        </link>
      <gazebo reference="left_wheel">
          <material>Gazebo/Black</material>
      </gazebo>
        <joint name="base_to_wheel_left_joint" type="continuous">
                <parent link="base_link"/>
                <child link="left_wheel"/>
                <origin xyz="0.0 ${wheel_separation/2} ${wheel_radius}"/>
                <axis xyz="0 1 0"/>
        </joint>
<!-- Transmission is important to link the joints and the controller -->
      <transmission name="wheel_left_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_to_wheel_left_joint">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		</joint>
		<actuator name="wheel_left_joint_motor">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		  <mechanicalReduction>1</mechanicalReduction>
		</actuator>
      </transmission>
<!-- right wheel-->
        <link name="right_wheel">
<cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
                <visual>
                        <geometry>
                                <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
                        </geometry>
                        <material name="blue">
                                <color rgba="${wheel_color}"/>
                        </material>
                        <origin rpy="1.57075 0 0" xyz="0 0 0"/>
                </visual>
		<collision>
			<geometry>
                                <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
                        </geometry>
                        <origin rpy="1.57075 0 0" xyz="0 0 0"/>
		</collision>
        </link>
      <gazebo reference="right_wheel">
          <material>Gazebo/Black</material>
      </gazebo>
        <joint name="base_to_wheel_right_joint" type="continuous">
                <parent link="base_link"/>
                <child link="right_wheel"/>
                <origin xyz="0.0 -${wheel_separation/2} ${wheel_radius}"/>
                <axis xyz="0 1 0"/>
        </joint>
  <!-- Transmission is important to link the joints and the controller -->
      <transmission name="wheel_right_joint_trans">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_to_wheel_right_joint">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		</joint>
		<actuator name="wheel_right_joint_motor">
		  <hardwareInterface>VelocityJointInterface</hardwareInterface>
		  <mechanicalReduction>1</mechanicalReduction>
		</actuator>
      </transmission>

<gazebo>
    <plugin name="gazebo_ros_controller" filename="libgazebo_ros_control.so" >
      <robotNamespace>/</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
</robot>
