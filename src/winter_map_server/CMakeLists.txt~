cmake_minimum_required(VERSION 2.8.3)
project(winter_map_server)

find_package(catkin REQUIRED
        COMPONENTS
            roscpp
            tf
            nav_msgs
        )

find_package(Boost REQUIRED COMPONENTS system)

find_package(PkgConfig)
pkg_check_modules(NEW_YAMLCPP yaml-cpp>=0.5)
if(NEW_YAMLCPP_FOUND)
add_definitions(-DHAVE_NEW_YAMLCPP)
endif(NEW_YAMLCPP_FOUND)

catkin_package(
    INCLUDE_DIRS
        include
    LIBRARIES
        map_server_image_loader
    CATKIN_DEPENDS
        roscpp
        tf
        nav_msgs
)
add_message_files(  FILES  Num.msg)

include_directories( include ${catkin_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS} )
target_link_libraries(map_server_image_loader SDL SDL_image ${Boost_LIBRARIES})

add_executable(map_server src/main.cpp)
target_link_libraries(map_server
    map_server_image_loader
    yaml-cpp
    ${catkin_LIBRARIES}
)

##for test
add_executable(read_yaml test/floors_yaml_test.cpp)
target_link_libraries(read_yaml yaml-cpp)

add_executable(test_map test/testmap.cpp)
target_link_libraries(test_map ${catkin_LIBRARIES})

add_executable(test_int8M test/test_int8M.cpp)
target_link_libraries(test_int8M ${catkin_LIBRARIES})
##for test

add_executable(map_server-map_saver src/map_saver.cpp)
set_target_properties(map_server-map_saver PROPERTIES OUTPUT_NAME map_saver)
target_link_libraries(map_server-map_saver
    ${catkin_LIBRARIES}
    )

# copy test data to same place as tests are run
function(copy_test_data)
    cmake_parse_arguments(PROJECT "" "" "FILES" ${ARGN})
    foreach(datafile ${PROJECT_FILES})
        file(COPY ${datafile} DESTINATION ${PROJECT_BINARY_DIR}/test)
    endforeach()
endfunction()
